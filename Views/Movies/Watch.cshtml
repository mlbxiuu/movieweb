@model MovieDetailViewModel
@{
    ViewData["Title"] = $"Xem phim: {Model?.Movie?.Title ?? "Không tìm thấy phim"}";
    var currentEpisode = ViewData["CurrentEpisode"] as MovieWebsite.Models.Episode;

    // Calculate aired episodes count
    var airedEpisodesCount = Model.Episodes?.Count(e => e.ReleaseDate <= DateTime.Now) ?? 0;
    var currentDateTime = DateTime.Now; // 03:00 PM +07, June 09, 2025
    var nextEpisode = Model.Episodes?.Where(e => e.EpisodeNumber > (currentEpisode?.EpisodeNumber ?? 0) && e.ReleaseDate > currentDateTime)
                                   .OrderBy(e => e.ReleaseDate)
                                   .FirstOrDefault();
}

<style>
    /* General Styles for Dark Theme */
    body {
        background-color: #1A1B29;
        color: #FFFFFF;
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    }

    .container-fluid {
        padding: 20px;
    }

    /* Movie Info & Details */
    .movie-header {
        display: flex;
        gap: 20px;
        margin-bottom: 25px;
        align-items: flex-start;
    }

    .movie-poster-container {
        flex-shrink: 0;
        width: 180px;
        border-radius: 8px;
        overflow: hidden;
        box-shadow: 0 4px 15px rgba(0, 0, 0, 0.4);
    }

    .movie-poster-container img {
        width: 100%;
        height: auto;
        display: block;
    }

    .movie-details-text {
        flex-grow: 1;
    }

    .movie-details-text h1 {
        font-size: 2.2rem;
        margin-bottom: 5px;
        line-height: 1.2;
    }

    .movie-details-text h2 {
        font-size: 1.4rem;
        color: #B0B0B0;
        margin-top: 0;
        margin-bottom: 15px;
        font-weight: 400;
    }

    .movie-meta-info {
        display: flex;
        flex-wrap: wrap;
        gap: 10px;
        margin-bottom: 15px;
        align-items: center;
    }

    .meta-tag {
        background-color: #333642;
        padding: 6px 12px;
        border-radius: 20px;
        font-size: 0.9rem;
        font-weight: 600;
        color: #D0D0D0;
        white-space: nowrap;
    }

    .meta-tag.imdb-rating {
        background-color: #FFC107;
        color: #333333;
        font-weight: bold;
        display: flex;
        align-items: center;
        gap: 5px;
    }

    .meta-tag.age-rating {
        background-color: #DC3545;
        color: white;
        font-weight: bold;
    }

    .genres {
        display: flex;
        flex-wrap: wrap;
        gap: 8px;
        margin-top: 10px;
        margin-bottom: 15px;
    }

    .genre-tag {
        background-color: #4C4F62;
        padding: 5px 10px;
        border-radius: 5px;
        font-size: 0.85rem;
        color: #E0E0E0;
    }

    .aired-status {
        color: #9C9C9C;
        font-size: 0.9rem;
    }

    .movie-description {
        margin-top: 20px;
        line-height: 1.6;
        color: #D0D0D0;
    }

    .movie-description-link {
        color: #FFC107;
        text-decoration: none;
        font-weight: 600;
        margin-top: 10px;
        display: inline-block;
    }

    .movie-description-link:hover {
        text-decoration: underline;
        color: #FFDA6A;
    }

    /* Right Column - User Actions & Cast */
    .sticky-top-custom {
        position: -webkit-sticky;
        position: sticky;
        top: 20px;
        z-index: 100;
    }

    .user-actions {
        display: flex;
        justify-content: flex-end;
        align-items: center;
        gap: 15px;
        padding-bottom: 20px;
    }

    .action-icon {
        color: #B0B0B0;
        font-size: 1.2rem;
        cursor: pointer;
        transition: color 0.2s;
    }

    .action-icon:hover {
        color: #FFFFFF;
    }

    .rating-bubble {
        background-color: #FFC107;
        color: #333333;
        padding: 8px 15px;
        border-radius: 25px;
        font-weight: bold;
        display: flex;
        align-items: center;
        gap: 8px;
        cursor: pointer;
        transition: background-color 0.2s;
    }

    .rating-bubble:hover {
        background-color: #FFDA6A;
    }

    .section-title {
        font-size: 1.5rem;
        margin-top: 30px;
        margin-bottom: 20px;
        border-bottom: 1px solid #333642;
        padding-bottom: 10px;
    }

    .cast-grid {
        display: grid;
        grid-template-columns: repeat(3, 1fr);
        gap: 20px;
    }

    .cast-member {
        text-align: center;
    }

    .cast-member img {
        width: 80px;
        height: 80px;
        border-radius: 50%;
        object-fit: cover;
        margin-bottom: 8px;
        border: 2px solid #4C4F62;
    }

    .cast-member p {
        font-size: 0.9rem;
        color: #E0E0E0;
        margin: 0;
    }

    /* Next Episode Notification */
    .next-episode-notification {
        background: linear-gradient(90deg, #6f42c1, #FFC107);
        color: white;
        padding: 15px 20px;
        border-radius: 8px;
        display: flex;
        align-items: center;
        gap: 15px;
        margin-top: 25px;
        margin-bottom: 25px;
        font-size: 1.1rem;
        font-weight: 500;
    }

    /* Episode Selection */
    .episode-selection-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 20px;
    }

    .episode-selection-header h3 {
        margin: 0;
        font-size: 1.3rem;
    }

    .episode-options {
        display: flex;
        gap: 15px;
    }

    .episode-option-btn {
        background-color: #333642;
        color: #E0E0E0;
        padding: 8px 15px;
        border-radius: 20px;
        text-decoration: none;
        font-size: 0.9rem;
        transition: background-color 0.2s, color 0.2s;
        border: none;
        display: flex;
        align-items: center;
        gap: 5px;
    }

    .episode-option-btn:hover {
        background-color: #4C4F62;
        color: white;
    }

    .episode-buttons-grid {
        display: flex;
        flex-wrap: wrap;
        gap: 10px;
        margin-top: 15px;
        margin-bottom: 30px;
    }

    .episode-buttons-grid .btn {
        background-color: #333642;
        color: #E0E0E0;
        border: 1px solid #4C4F62;
        padding: 8px 15px;
        border-radius: 5px;
        text-decoration: none;
        transition: background-color 0.2s, border-color 0.2s;
        min-width: 60px;
    }

    .episode-buttons-grid .btn:hover {
        background-color: #4C4F62;
        border-color: #6a6e87;
    }

    .episode-buttons-grid .btn.active {
        background-color: #FFC107;
        color: #333333;
        border-color: #FFC107;
        font-weight: bold;
    }

    /* Video Player */
    .video-player-container {
        position: relative;
        padding-bottom: 56.25%;
        height: 0;
        overflow: hidden;
        margin-bottom: 20px;
        border-radius: 8px;
        background-color: #000;
    }

    .video-player-container video {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        object-fit: contain;
    }

    /* Comments Section */
    .comment-tabs {
        display: flex;
        margin-bottom: 20px;
        border-bottom: 2px solid #333642;
    }

    .comment-tab-btn {
        background-color: transparent;
        border: none;
        padding: 10px 20px;
        color: #B0B0B0;
        font-size: 1.1rem;
        cursor: pointer;
        transition: color 0.2s, border-bottom 0.2s;
        border-bottom: 2px solid transparent;
    }

    .comment-tab-btn.active {
        color: #FFC107;
        border-bottom: 2px solid #FFC107;
        font-weight: 600;
    }

    .comment-tab-btn:hover:not(.active) {
        color: white;
    }

    .comment-section-header {
        font-size: 1.3rem;
        margin-bottom: 20px;
    }

    .login-prompt {
        background-color: #333642;
        padding: 15px;
        border-radius: 8px;
        margin-bottom: 20px;
        text-align: center;
        color: #E0E0E0;
    }

    .login-prompt a {
        color: #FFC107;
        text-decoration: none;
        font-weight: 600;
    }

    .login-prompt a:hover {
        text-decoration: underline;
    }

    .comment-form .form-group {
        margin-bottom: 15px;
    }

    .comment-form .form-control {
        background-color: #2A2C3C;
        border: 1px solid #4C4F62;
        color: white;
        border-radius: 5px;
        padding: 10px;
    }

    .comment-form .form-control::placeholder {
        color: #9C9C9C;
    }

    .comment-form .btn-primary {
        background-color: #FFC107;
        color: #333333;
        border: none;
        padding: 10px 25px;
        border-radius: 20px;
        font-weight: bold;
        transition: background-color 0.2s;
    }

    .comment-form .btn-primary:hover {
        background-color: #FFDA6A;
    }

    .comment-item {
        background-color: #2A2C3C;
        padding: 15px;
        border-radius: 8px;
        margin-bottom: 15px;
    }

    .comment-item .comment-header {
        display: flex;
        align-items: center;
        gap: 10px;
        margin-bottom: 10px;
    }

    .comment-item .user-avatar {
        width: 40px;
        height: 40px;
        border-radius: 50%;
        object-fit: cover;
        border: 1px solid #FFC107;
    }

    .comment-item .user-name {
        font-weight: bold;
        color: #FFC107;
    }

    .comment-item .comment-meta {
        font-size: 0.8rem;
        color: #9C9C9C;
    }

    .comment-item .comment-content {
        color: #E0E0E0;
        line-height: 1.5;
        margin-bottom: 10px;
    }

    .comment-item .comment-actions {
        font-size: 0.9rem;
        color: #9C9C9C;
        display: flex;
        gap: 15px;
    }

    /* Toggle Switch (for spoiler) */
    .toggle-switch {
        position: relative;
        display: inline-block;
        width: 40px;
        height: 20px;
        margin-left: 10px;
    }

    .toggle-switch input {
        opacity: 0;
        width: 0;
        height: 0;
    }

    .toggle-switch .slider {
        position: absolute;
        cursor: pointer;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background-color: #ccc;
        -webkit-transition: .4s;
        transition: .4s;
        border-radius: 20px;
    }

    .toggle-switch .slider:before {
        position: absolute;
        content: "";
        height: 16px;
        width: 16px;
        left: 2px;
        bottom: 2px;
        background-color: white;
        -webkit-transition: .4s;
        transition: .4s;
        border-radius: 50%;
    }

    .toggle-switch input:checked + .slider {
        background-color: #FFC107;
    }

    .toggle-switch input:focus + .slider {
        box-shadow: 0 0 1px #FFC107;
    }

    .toggle-switch input:checked + .slider:before {
        -webkit-transform: translateX(20px);
        -ms-transform: translateX(20px);
        transform: translateX(20px);
    }

    /* Recommendations */
    .recommendation-grid {
        display: grid;
        grid-template-columns: repeat(1, 1fr);
        gap: 20px;
    }

    .recommended-movie-card {
        display: flex;
        gap: 15px;
        background-color: #2A2C3C;
        border-radius: 8px;
        overflow: hidden;
        cursor: pointer;
        transition: background-color 0.2s;
        text-decoration: none;
        color: inherit;
    }

    .recommended-movie-card:hover {
        background-color: #333642;
    }

    .recommended-movie-card img {
        width: 90px;
        height: 130px;
        object-fit: cover;
        flex-shrink: 0;
    }

    .recommended-movie-details {
        padding: 10px 0;
        flex-grow: 1;
        display: flex;
        flex-direction: column;
        justify-content: center;
    }

    .recommended-movie-details h4 {
        font-size: 1.1rem;
        margin-bottom: 5px;
        color: white;
        line-height: 1.3;
    }

    .recommended-movie-details p {
        font-size: 0.9rem;
        color: #B0B0B0;
        margin-bottom: 5px;
    }

    .recommended-movie-meta {
        display: flex;
        flex-wrap: wrap;
        gap: 5px;
        font-size: 0.8rem;
        color: #9C9C9C;
    }

    .recommended-movie-meta span {
        background-color: #4C4F62;
        padding: 3px 8px;
        border-radius: 3px;
        white-space: nowrap;
    }

    /* Media Queries for responsiveness */
    @@media (max-width: 992px) {
        .movie-header {
            flex-direction: column;
            align-items: center;
            text-align: center;
        }

        .movie-poster-container {
            width: 150px;
            margin-bottom: 20px;
        }

        .movie-details-text h1 {
            font-size: 1.8rem;
        }

        .movie-details-text h2 {
            font-size: 1.2rem;
        }

        .meta-info, .genres {
            justify-content: center;
        }

        .cast-grid {
            grid-template-columns: repeat(2, 1fr);
        }

        .user-actions {
            justify-content: center;
        }

        .recommendation-grid {
            grid-template-columns: repeat(2, 1fr);
        }
    }

    @@media (max-width: 768px) {
        .cast-grid {
            grid-template-columns: repeat(1, 1fr);
        }
        .recommendation-grid {
            grid-template-columns: repeat(1, 1fr);
        }
    }
</style>

<div class="container-fluid">
    <div class="row">
        <!-- Left Column: Movie Info, Video Player, Episodes, Comments -->
        <div class="col-lg-8 col-md-12">
            <!-- Movie Header Section -->
            <div class="movie-header">
                <div class="movie-poster-container">
                    <img src="@Model.Movie?.PosterPath" alt="@Model.Movie?.Title Poster">
                </div>
                <div class="movie-details-text">
                    <h1>@Model.Movie?.Title</h1>
                    <h2>@Model.Movie?.EnglishTitle</h2>

                    <div class="movie-meta-info">
                        <span class="meta-tag imdb-rating">
                            <i class="fas fa-star"></i> @(Model.Movie?.AverageRating.ToString("F1") ?? "0.0")
                        </span>
                        <span class="meta-tag age-rating">T16</span>
                        <span class="meta-tag">@Model.Movie?.ReleaseYear</span>
                        <span class="meta-tag">Phần 1</span>
                        <span class="meta-tag">Tập @(currentEpisode?.EpisodeNumber ?? 1)</span>
                    </div>

                    <div class="genres">
                        @if (Model.Movie?.MovieGenres != null)
                        {
                            @foreach (var movieGenre in Model.Movie.MovieGenres)
                            {
                                <span class="genre-tag">@movieGenre.Genre.Name</span>
                            }
                        }
                        else if (Model.Movie?.Genre != null)
                        {
                            <span class="genre-tag">@Model.Movie.Genre.Name</span>
                        }
                    </div>

                    <p class="aired-status">Đã chiếu: @airedEpisodesCount / @Model.Movie?.TotalEpisodes tập</p>

                    <p class="movie-description">
                        @Model.Movie?.Description
                    </p>
                    <a href="@Url.Action("Details", "Movies", new { id = Model.Movie?.Id })" class="movie-description-link">
                        Thông tin phim <i class="fas fa-chevron-right"></i>
                    </a>
                </div>
            </div>

            <!-- Next Episode Notification -->
            @if (nextEpisode != null)
            {
                <div class="next-episode-notification">
                    <i class="fas fa-bell"></i>
                    Tập @nextEpisode.EpisodeNumber sẽ phát sóng vào @(nextEpisode.ReleaseDate.ToString("HH:mm dd/MM/yyyy")). Các bạn nhớ đón xem nhé 😍
                </div>
            }

            <!-- Video Player -->
            <div class="video-player-container">
                @if (currentEpisode != null)
                {
                    <video controls autoplay class="embed-responsive-item" poster="@Model.Movie?.PosterPath">
                        <source src="@currentEpisode.VideoPath" type="video/mp4">
                        Trình duyệt của bạn không hỗ trợ thẻ video.
                    </video>
                }
                else
                {
                    <div class="d-flex justify-content-center align-items-center" style="height: 100%; color: #B0B0B0;">
                        <p>Không tìm thấy tập phim để phát. Vui lòng chọn tập.</p>
                    </div>
                }
            </div>

            <!-- Episode Selection & Options -->
            <div class="episode-selection-header">
                <h3>Phần 1</h3>
                <div class="episode-options">
                    <a href="#" class="episode-option-btn"><i class="fas fa-closed-captioning"></i> Phụ đề</a>
                    <a href="#" class="episode-option-btn"><i class="fas fa-microphone"></i> Thuyết minh giọng Nam</a>
                    <label class="toggle-switch">
                        <input type="checkbox" checked>
                        <span class="slider"></span>
                    </label>
                    <span style="font-size: 0.9rem; color: #E0E0E0;">Rút gọn</span>
                </div>
            </div>

            @if (Model.Episodes?.Any() ?? false)
            {
                <div class="episode-buttons-grid">
                    @foreach (var episode in Model.Episodes.OrderBy(e => e.EpisodeNumber))
                    {
                        <a asp-action="Watch" asp-route-movieId="@Model.Movie?.Id" asp-route-episodeNumber="@episode.EpisodeNumber"
                           class="btn @(episode.Id == currentEpisode?.Id ? "active" : "")">Tập @episode.EpisodeNumber</a>
                    }
                </div>
            }

            <!-- Comment & Rating Section -->
            <div class="comment-tabs">
                <button class="comment-tab-btn active" onclick="showTab('comments')">Bình luận (@(Model.Comments?.Count() ?? 0))</button>
                <button class="comment-tab-btn" onclick="showTab('ratings')">Đánh giá (@(Model.Ratings?.Count() ?? 0))</button>
            </div>

            <div id="comments-tab" class="comment-content-area">
                <h3 class="comment-section-header">Bình luận cho @(currentEpisode != null ? $"Tập {currentEpisode.EpisodeNumber}" : "Phim")</h3>

                <div class="login-prompt">
                    Vui lòng <a href="#">đăng nhập</a> để tham gia bình luận.
                </div>

                <!-- Comment Form -->
                <form asp-action="AddComment" asp-controller="Movies" method="post" class="comment-form mb-4">
                    <input type="hidden" asp-for="NewComment.MovieId" value="@Model.Movie?.Id" />
                    <input type="hidden" asp-for="NewComment.EpisodeId" value="@currentEpisode?.Id" />

                    <div class="form-group">
                        <textarea asp-for="NewComment.Content" class="form-control" rows="4" placeholder="Viết bình luận"></textarea>
                        <span asp-validation-for="NewComment.Content" class="text-danger"></span>
                    </div>

                    <div class="d-flex justify-content-between align-items-center mt-3">
                        <div class="d-flex align-items-center">
                            <label class="toggle-switch">
                                <input type="checkbox" name="NewComment.IsSpoiler" value="true">
                                <span class="slider"></span>
                            </label>
                            <span style="font-size: 0.9rem; color: #D0D0D0; margin-left: 5px;">Tiết lộ?</span>
                        </div>
                        <button type="submit" class="btn btn-primary">Gửi <i class="fas fa-paper-plane ml-2"></i></button>
                    </div>
                    <input type="hidden" asp-for="NewComment.UserName" value="Anonymous" />
                    <input type="hidden" asp-for="NewComment.UserEmail" value="anonymous@example.com" />
                </form>

                <!-- Comments Display -->
                @if (Model.Comments?.Any() ?? false)
                {
                    @foreach (var comment in Model.Comments.Where(c => c.EpisodeId == currentEpisode?.Id && c.ParentCommentId == null).OrderByDescending(c => c.CreatedAt))
                    {
                        <div class="comment-item">
                            <div class="comment-header">
                                <img src="https://ui-avatars.com/api/?name=@(Uri.EscapeDataString(comment.UserName))&background=FFC107&color=fff" alt="Avatar" class="user-avatar">
                                <span class="user-name">@comment.UserName</span>
                                <span class="comment-meta">@comment.CreatedAt.ToString("HH:mm dd/MM/yyyy")</span>
                                <span class="comment-meta">P.1 - Tập @(comment.EpisodeId.HasValue ? comment.Episode.EpisodeNumber : "Phim")</span>
                            </div>
                            <p class="comment-content">@comment.Content</p>
                            <div class="comment-actions">
                                <span><i class="far fa-thumbs-up"></i> @comment.Likes</span>
                                <span><i class="far fa-thumbs-down"></i> @comment.Dislikes</span>
                                <a href="#">Trả lời</a>
                            </div>

                            @if (comment.Replies.Any())
                            {
                                <div class="replies mt-3 pl-4 border-left border-secondary">
                                    @foreach (var reply in comment.Replies.OrderBy(r => r.CreatedAt))
                                    {
                                        <div class="comment-item" style="background-color: #242636; margin-bottom: 10px;">
                                            <div class="comment-header">
                                                <img src="https://ui-avatars.com/api/?name=@(Uri.EscapeDataString(reply.UserName))&background=9C27B0&color=fff" alt="Avatar" class="user-avatar" style="border-color: #9C27B0;">
                                                <span class="user-name" style="color: #9C27B0;">@reply.UserName</span>
                                                <span class="comment-meta">@reply.CreatedAt.ToString("HH:mm dd/MM/yyyy")</span>
                                            </div>
                                            <p class="comment-content">@reply.Content</p>
                                            <div class="comment-actions">
                                                <span><i class="far fa-thumbs-up"></i> @reply.Likes</span>
                                                <span><i class="far fa-thumbs-down"></i> @reply.Dislikes</span>
                                            </div>
                                        </div>
                                    }
                                </div>
                            }
                        </div>
                    }
                }
                else
                {
                    <p class="text-center text-muted">Chưa có bình luận nào cho tập này. Hãy là người đầu tiên bình luận!</p>
                }
            </div>

            <div id="ratings-tab" class="comment-content-area" style="display: none;">
                <h3 class="comment-section-header">Đánh giá từ người xem</h3>
                @if (Model.Ratings?.Any() ?? false)
                {
                    @foreach (var rating in Model.Ratings.OrderByDescending(r => r.CreatedAt))
                    {
                        <div class="comment-item">
                            <div class="comment-header">
                                <img src="https://ui-avatars.com/api/?name=@(Uri.EscapeDataString(rating.UserName))&background=2196F3&color=fff" alt="Avatar" class="user-avatar" style="border-color: #2196F3;">
                                <span class="user-name" style="color: #2196F3;">@rating.UserName</span>
                                <span class="comment-meta">@rating.CreatedAt.ToString("dd/MM/yyyy")</span>
                            </div>
                            <p class="comment-content">
                                Điểm: <strong>@rating.Score/10</strong> <i class="fas fa-star" style="color: #FFC107;"></i>
                                @if (!string.IsNullOrWhiteSpace(rating.Review))
                                {
                                    <br />@rating.Review
                                }
                            </p>
                        </div>
                    }
                }
                else
                {
                    <p class="text-center text-muted">Chưa có đánh giá nào cho phim này. Hãy là người đầu tiên đánh giá!</p>
                }
            </div>
        </div>

        <!-- Right Column: Rating, Cast, Recommendations -->
        <div class="col-lg-4 col-md-12">
            <div class="sticky-top-custom">
                <!-- User Actions (Rating/Comment) -->
                <div class="user-actions">
                    <span class="action-icon"><i class="fas fa-star"></i> Đánh giá</span>
                    <span class="action-icon"><i class="fas fa-comment-dots"></i> Bình luận</span>
                    <div class="rating-bubble">
                        <i class="fas fa-star"></i> @(Model.Movie?.AverageRating.ToString("F1") ?? "0.0") Đánh giá
                    </div>
                </div>

                <!-- Cast Section -->
                <h3 class="section-title">Diễn viên</h3>
                @if (!string.IsNullOrWhiteSpace(Model.Movie?.Cast))
                {
                    var castMembers = Model.Movie.Cast.Split(new[] { ',', ';' }, StringSplitOptions.RemoveEmptyEntries)
                                        .Select(s => s.Trim())
                                        .ToList();
                    <div class="cast-grid">
                        @foreach (var member in castMembers.Take(6))
                        {
                            <div class="cast-member">
                                <img src="https://ui-avatars.com/api/?name=@(Uri.EscapeDataString(member))&background=random&color=fff" alt="@member">
                                <p>@member</p>
                            </div>
                        }
                    </div>
                }
                else
                {
                    <p class="text-muted">Thông tin diễn viên đang được cập nhật.</p>
                }

                <!-- Recommendations Section -->
                <h3 class="section-title">Đề xuất cho bạn</h3>
                <div class="recommendation-grid">
                    @if (Model.RelatedMovies?.Any() ?? false)
                    {
                        @foreach (var relatedMovie in Model.RelatedMovies.Take(4))
                        {
                            <a asp-action="Details" asp-controller="Movies" asp-route-id="@relatedMovie.Id" class="recommended-movie-card">
                                <img src="@relatedMovie.PosterPath" alt="@relatedMovie.Title">
                                <div class="recommended-movie-details">
                                    <h4>@relatedMovie.Title</h4>
                                    <p>@relatedMovie.EnglishTitle</p>
                                    <div class="recommended-movie-meta">
                                        <span>T16</span>
                                        <span>Phần 1</span>
                                        <span>Tập @relatedMovie.TotalEpisodes</span>
                                    </div>
                                </div>
                            </a>
                        }
                    }
                    else
                    {
                        <p class="text-muted">Không có phim đề xuất.</p>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script src="https://kit.fontawesome.com/a076d05399.js" crossorigin="anonymous"></script> <!-- Replace with your Font Awesome kit ID -->
    <script>
        // JavaScript for tab switching
        function showTab(tabId) {
            document.querySelectorAll('.comment-content-area').forEach(function(area) {
                area.style.display = 'none';
            });
            document.querySelectorAll('.comment-tab-btn').forEach(function(btn) {
                btn.classList.remove('active');
            });

            document.getElementById(tabId + '-tab').style.display = 'block';
            document.querySelector('.comment-tab-btn[onclick="showTab(\'' + tabId + '\')"]').classList.add('active');
        }

        document.addEventListener('DOMContentLoaded', function() {
            showTab('comments');
        });
    </script>
}